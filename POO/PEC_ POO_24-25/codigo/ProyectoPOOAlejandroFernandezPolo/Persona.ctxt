#BlueJ class context
comment0.target=Persona
comment0.text=\r\n\ Clase\ abstracta\ que\ representa\ una\ persona.\r\n\ Contiene\ informaci\u00F3n\ b\u00E1sica\ como\ nombre,\ DNI\ y\ fecha\ de\ nacimiento.\r\n\ Proporciona\ validaciones\ para\ asegurar\ la\ integridad\ de\ los\ datos\ introducidos.\r\n
comment1.params=dni\ nombre\ fNacimiento
comment1.target=Persona(java.lang.String,\ java.lang.String,\ int)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Persona\ que\ inicializa\ los\ atributos\ de\ la\ instancia\r\n\ validando\ que\ sean\ correctos.\r\n\r\n\ @param\ dni\ \ \ \ \ \ \ \ \ DNI\ completo,\ debe\ tener\ 8\ d\u00EDgitos\ y\ una\ letra\ v\u00E1lida.\r\n\ @param\ nombre\ \ \ \ \ \ Nombre\ de\ la\ persona,\ no\ puede\ ser\ nulo\ o\ vac\u00EDo.\r\n\ @param\ fNacimiento\ Fecha\ de\ nacimiento\ como\ entero\ en\ formato\ DDMMAAAA.\r\n\ @throws\ IllegalArgumentException\ Si\ el\ DNI\ no\ es\ correcto.\r\n\ @throws\ IllegalArgumentException\ Si\ el\ nombre\ es\ nulo\ o\ vac\u00EDo.\r\n\ @throws\ IllegalArgumentException\ Si\ la\ fecha\ de\ nacimiento\ no\ es\ v\u00E1lida.\r\n
comment10.params=dni
comment10.target=boolean\ compLetraDni(java.lang.String)
comment10.text=\r\n\ Comprueba\ si\ la\ letra\ del\ DNI\ corresponde\ a\ los\ 8\ n\u00FAmeros\ iniciales.\r\n\r\n\ @param\ dni\ DNI\ completo\ como\ string\r\n\ @return\ true\ si\ la\ letra\ es\ correcta\r\n
comment11.params=fecha
comment11.target=boolean\ fechaCorrecta(int)
comment11.text=\r\n\ Valida\ que\ la\ fecha\ tenga\ un\ formato\ v\u00E1lido\ y\ sea\ una\ fecha\ real.\r\n\r\n\ @param\ fecha\ Fecha\ como\ entero\ en\ formato\ AAAAMMDD\r\n\ @return\ true\ si\ la\ fecha\ es\ v\u00E1lida\r\n
comment12.params=year
comment12.target=boolean\ esBisiesto(int)
comment12.text=\r\n\ Determina\ si\ un\ a\u00F1o\ es\ bisiesto.\r\n\r\n\ @param\ year\ A\u00F1o\ a\ evaluar\r\n\ @return\ true\ si\ es\ bisiesto\r\n
comment13.params=year\ dividendo
comment13.target=boolean\ esDivisible(int,\ int)
comment13.text=\r\n\ Verifica\ si\ un\ a\u00F1o\ es\ divisible\ por\ cierto\ n\u00FAmero.\r\n\r\n\ @param\ year\ A\u00F1o\r\n\ @param\ dividendo\ Divisor\r\n\ @return\ true\ si\ es\ divisible\r\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\r\n\ Devuelve\ una\ representaci\u00F3n\ textual\ del\ objeto\ Persona.\r\n\r\n\ @return\ String\ con\ la\ informaci\u00F3n\ principal\ de\ la\ persona\r\n
comment2.params=
comment2.target=java.lang.String\ getDni()
comment3.params=dni
comment3.target=void\ setDni(java.lang.String)
comment3.text=\r\n\ Establece\ el\ DNI\ si\ es\ v\u00E1lido.\r\n\r\n\ @param\ dni\ DNI\ completo\ con\ letra\r\n\ @throws\ IllegalArgumentException\ si\ el\ DNI\ no\ cumple\ con\ el\ formato\ y\ letra\r\n
comment4.params=
comment4.target=java.lang.String\ getNombre()
comment5.params=nombre
comment5.target=void\ setNombre(java.lang.String)
comment5.text=\r\n\ Establece\ el\ nombre\ si\ no\ est\u00E1\ vac\u00EDo.\r\n\r\n\ @param\ nombre\ Nombre\ de\ la\ persona\r\n\ @throws\ IllegalArgumentException\ si\ el\ nombre\ es\ nulo\ o\ est\u00E1\ vac\u00EDo\r\n
comment6.params=
comment6.target=int\ getfNacimiento()
comment7.params=fNacimiento
comment7.target=void\ setfNacimiento(int)
comment7.text=\r\n\ Establece\ la\ fecha\ de\ nacimiento\ si\ es\ v\u00E1lida.\r\n\r\n\ @param\ fNacimiento\ Fecha\ en\ formato\ DDMMAAAA\r\n\ @throws\ IllegalArgumentException\ si\ la\ fecha\ no\ es\ v\u00E1lida\r\n
comment8.params=cadena
comment8.target=boolean\ contenidoCadena(java.lang.String)
comment8.text=\r\n\ Valida\ que\ una\ cadena\ no\ est\u00E9\ vac\u00EDa\ ni\ contenga\ solo\ espacios.\r\n\r\n\ @param\ cadena\ Cadena\ a\ validar\r\n\ @return\ true\ si\ tiene\ contenido\r\n
comment9.params=dniConLetra
comment9.target=boolean\ dniCorrecto(java.lang.String)
comment9.text=\r\n\ Valida\ que\ el\ DNI\ tenga\ 8\ d\u00EDgitos\ num\u00E9ricos\ seguidos\ de\ la\ letra\ correcta.\r\n\r\n\ @param\ dniConLetra\ DNI\ completo\ como\ string\r\n\ @return\ true\ si\ el\ formato\ y\ la\ letra\ son\ correctos\r\n
numComments=15

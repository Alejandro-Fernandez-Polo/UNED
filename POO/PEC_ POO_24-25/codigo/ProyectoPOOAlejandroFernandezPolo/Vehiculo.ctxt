#BlueJ class context
comment0.target=Vehiculo
comment1.params=id
comment1.target=Vehiculo(int)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Vehiculo.\r\n\ Inicializa\ los\ atributos\ con\ los\ valores\ recibidos\ como\ par\u00E1metros.\r\n\r\n\ @param\ id\ \ \ \ \ \ \ \ \ \ \ Identificador\ del\ veh\u00EDculo\r\n
comment2.params=
comment2.target=int\ getId()
comment3.params=id
comment3.target=void\ setId(int)
comment4.params=
comment4.target=double\ getNivelBateria()
comment5.params=nivelBateria
comment5.target=void\ setNivelBateria(double)
comment5.text=\r\n\ Establece\ el\ nivel\ de\ bater\u00EDa\ del\ veh\u00EDculo.\r\n\ Si\ el\ valor\ recibido\ es\ mayor\ a\ 100,\ se\ ajusta\ autom\u00E1ticamente\ a\ 100.\r\n\r\n\ @param\ nivelBateria\ Valor\ a\ establecer\r\n
comment6.params=nivelBateria
comment6.target=void\ modificarNivelBateria(int)
comment7.params=
comment7.target=EstadosVehiculo\ getEstado()
comment8.params=estado
comment8.target=void\ setEstado(java.lang.String)
comment8.text=\r\n\ Establece\ el\ estado\ del\ veh\u00EDculo\ a\ partir\ de\ una\ cadena.\r\n\ Se\ convierte\ la\ cadena\ a\ may\u00FAsculas\ y\ se\ valida\ que\ coincida\ con\ uno\ de\ los\ valores\ del\ enum.\r\n\r\n\ @param\ estado\ Estado\ a\ establecer\ como\ cadena\r\n
comment9.params=minutos
comment9.target=void\ calcularConsumoBateria(int)
comment9.text=\r\n\ M\u00E9todo\ abstracto\ que\ debe\ ser\ implementado\ por\ las\ subclases.\r\n\ Calcula\ el\ consumo\ de\ bater\u00EDa\ del\ veh\u00EDculo\ en\ funci\u00F3n\ del\ tiempo\ de\ uso.\r\n\r\n\ @param\ minutos\ Tiempo\ de\ uso\ en\ minutos\r\n
numComments=10
